[#ftl]
[#--macro for writing a element page--]
[#import "boilerplate.fmt" as libBoilerplate/]
[#macro writeApplicationStatePage state]
  [@libBoilerplate.writeStartBody label=state.name/]
  <div class="container">
    [@libBoilerplate.writeHeader]
      <ul class="xbreadcrumbs" id="breadcrumbs">
        <li><a href="Home.html" class="home">Home</a></li>
        <li>
          <a href="application-states.html">Application States</a>
          <ul>
            <li><a href="media-types.html">Media Types</a></li>
            <li><a href="application-states.html">Application States</a></li>
          </ul>
        </li>
        <li class="current">
          <a href="${state.name}_resource.html">${state.name}</a>
          <ul>
      [#list applicationStates as st]
            <li><a href="${st.id}-state.html">${st.name}</a></li>
      [/#list]
          </ul>
        </li>
      </ul>
    [/@libBoilerplate.writeHeader]
    <div id="main" class="column first last span-20">
      <h1>${state.name}</h1>

      <hr/>

      <p>${state.description!""}</p>

      <p>${state.definition.docValue!""}</p>

      <table>
        <tr>
          <td align="right">Rel:</td>
          <td>${state.rel}</td>
        </tr>
        <tr>
          <td align="right">Namespace:</td>
          <td>${state.namespace}</td>
        </tr>
        [#if state.resourceElements?size > 0]
        <tr>
          <td align="right">Media Types:</td>
          <td>
            <ul>
            </ul>
            [#list state.resourceElements as resourceElement]
              [#assign schema=ns2schema[resourceElement.namespace]/]
              [#if schema.properties.mediaType?? && schema.properties.mediaType.jsonMediaType??]
                <li><a href="${baseProjectUri(schema.properties.mediaType)}mt_${schema.properties.mediaType.id}_json.html">${schema.properties.mediaType.jsonMediaType}</a> (element <a href="${baseProjectUri(resourceElement)}${schemaForNamespace(resourceElement).id}_el_${resourceElement.name}_json.html">${resourceElement.name}</a>)</li>
              [/#if]
              [#if schema.properties.mediaType?? && schema.properties.mediaType.xmlMediaType??]
                <li><a href="${baseProjectUri(schema.properties.mediaType)}mt_${schema.properties.mediaType.id}_xml.html">${schema.properties.mediaType.xmlMediaType}</a> (element <a href="${baseProjectUri(resourceElement)}${schemaForNamespace(resourceElement).id}_el_${resourceElement.name}_xml.html">${resourceElement.name}</a>)</li>
              [/#if]
            [/#list]
          </td>
        </tr>
        [/#if]
      </table>

      [#if state.transitions?size > 0]
      <h3>Links</h3>

      <table>
        <tr>
          <th>Rel</th>
          <th>To</th>
          <th>Description</th>
        </tr>
        [#list state.transitions as link]
          <tr>
            <td>${link.rel}</td>
            <td>[#if link.state??]<a href="${link.state.id}-state.html">${link.state.name}</a>[/#if]</td>
            <td>${link.description}</td>
          </tr>
        [/#list]
      </table>

      [/#if]
      [#if state.definition.statusCodes?size > 0]
      <h3>Status Codes</h3>

      <table>
        <tr>
          <th align="center">code</th>
          <th align="center">condition</th>
        </tr>
        [#list state.definition.statusCodes as statusCode]
        <tr>
          <td>${statusCode.code}</td>
          <td>${statusCode.condition}</td>
        </tr>
        [/#list]
      </table>

      [/#if]
      [#if state.definition.warnings?size > 0]
      <h3>Warnings</h3>

      <table>
        <tr>
          <th align="center">code</th>
          <th align="center">condition</th>
        </tr>
        [#list state.definition.warnings as warning]
        <tr>
          <td>${warning.code}</td>
          <td>${warning.condition}</td>
        </tr>
        [/#list]
      </table>

      [/#if]
      [#if state.definition.resourceParameters?size > 0]
      <h3>Common Parameters</h3>

      <table>
        <tr>
          <th align="center">name</th>
          <th align="center">type</th>
          <th align="center">description</th>
        </tr>
        [#list state.definition.resourceParameters?sort_by("typeName") as param]
        <tr>
          <td>${param.parameterName}</td>
          <td>${param.typeName}</td>
          <td>${param.docValue!""}</td>
        </tr>
        [/#list]
      </table>

      [/#if]
      <h3>Operations</h3>

      [#if state.definition.resourceMethods?size > 0]
      <div id="tabs">
        <ul>
        [#list state.definition.resourceMethods as op]
          <li><a href="#${op.httpMethods[0]?upper_case}">${op.httpMethods[0]?upper_case}</a></li>
        [/#list]
        </ul>
        [#list state.definition.resourceMethods as op]
          [#assign method=op.httpMethods[0]?upper_case/]
        <div id="${method}">
        <p>${op.docValue!""}</p>
        [#if op.metaData.statusCodes?size > 0]

        <h4>Status Codes</h4>

        <table>
          <tr>
            <th align="center">code</th>
            <th align="center">condition</th>
          </tr>
          [#list op.metaData.statusCodes as statusCode]
          <tr>
            <td>${statusCode.code}</td>
            <td>${statusCode.condition}</td>
          </tr>
          [/#list]
        </table>
        [/#if]
        [#if op.metaData.warnings?size > 0]

        <h4>Warnings</h4>

        <table>
          <tr>
            <th align="center">code</th>
            <th align="center">condition</th>
          </tr>
          [#list op.metaData.warnings as warning]
          <tr>
            <td>${warning.code}</td>
            <td>${warning.condition}</td>
          </tr>
          [/#list]
        </table>
        [/#if]
      </div>
      [/#list]
    [#else]
    <p>No methods are defined on this application state.</p>
    [/#if]


    <div class="clear" />
    [@libBoilerplate.writeFooter/]
  </div> <!--! end of #container -->

  [@libBoilerplate.writeEndBody/]
[/#macro]